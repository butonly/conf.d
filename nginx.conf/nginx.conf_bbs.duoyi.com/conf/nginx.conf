
#user  nobody;
worker_processes  4;

error_log  logs/error.log;
error_log  logs/error.log  notice;
error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    use epoll;
    worker_connections  655350;
}


http {

    include       mime.types;
    default_type  application/octet-stream;
    charset       utf-8;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';


    log_format  main_static  '$remote_addr - $remote_user [$time_local] "$request" '
                             '$status $upstream_cache_status $body_bytes_sent "$http_referer" '
                             '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    server_names_hash_bucket_size   128;    #服务器名字的hash表大小
    client_header_buffer_size       32k;    #上传文件大小限制
    large_client_header_buffers     4 64k;  #设定请求缓
    client_max_body_size            8m;     #设定请求缓
    autoindex                       off;    #开启目录列表访问，合适下载服务器，默认关闭。
    tcp_nopush                      on;     #防止网络阻塞
    tcp_nodelay                     on;     #防止网络阻塞
    keepalive_timeout               120;    #长连接超时时间，单位是秒

    #开启高效文件传输模式，
    #sendfile指令指定nginx是否调用sendfile函数来输出文件，对于普通应用设为 on，
    #如果用来进行下载等应用磁盘IO重负载应用，可设置为off，
    #以平衡磁盘与网络I/O处理速度，降低系统的负载。
    #注意：如果图片显示不正常把这个改成off。
    sendfile                        on;     

    #FastCGI相关参数是为了改善网站的性能：
    #减少资源占用，提高访问速度。下面参数看字面意思都能理解。
    fastcgi_connect_timeout         300;
    fastcgi_send_timeout            300;
    fastcgi_read_timeout            300;
    fastcgi_buffer_size             64k;
    fastcgi_buffers                 4 64k;
    fastcgi_busy_buffers_size       128k;
    fastcgi_temp_file_write_size    128k;

    ##cache##
    proxy_connect_timeout       5;
    proxy_read_timeout          60;
    proxy_send_timeout          5;
    proxy_buffer_size           16k;
    proxy_buffers               4 64k;
    proxy_busy_buffers_size     128k;
    proxy_temp_file_write_size  128k;
    proxy_temp_path             /raid/nginx/temp_dir;
    proxy_cache_path            /raid/nginx/cache levels=1:2 keys_zone=cache_one:200m inactive=1d max_size=30g;
    ##end##
    #proxy_ignore_headers X-Accel-Expires Expires Cache-Control Set-Cookie;

    #$upstream_cache_status表示资源缓存的状态，有HIT MISS EXPIRED三种状态
    #add_header X-Cache $upstream_cache_status;
    add_header X-Cache '$upstream_cache_status from $server_addr';

    #gzip模块设置
    gzip                on;     #开启gzip压缩输出
    gzip_proxied        any;    #nginx 做前端代理时启用该选项，表示无论后端服务器的headers头返回什么信息，都无条件启用压缩
    gzip_min_length     1k;     #最小压缩文件大小
    gzip_buffers        4 16k;  #压缩缓冲区
    gzip_http_version   1.0;    #压缩版本（默认1.1，前端如果是squid2.5请使用1.0）
    gzip_comp_level     2;      #压缩等级
    #压缩类型，默认就已经包含text/html，所以下面就不用再写了，写上去也不会有问题，但是会有一个warn。
    #gzip_types text/plain application/x-javascript text/css application/xml; 
    gzip_types text/plain application/x-javascript text/css text/javascript application/x-httpd-php image/jpeg image/gif image/png;
    #gzip_vary on;
    gzip_disable "MSIE [1-6]\."; #IE6对Gzip不怎么友好，不给它Gzip了

    #limit_zone crawler $binary_remote_addr 10m; #开启限制IP连接数的时候需要使用

    include vhosts/*.conf;

    server {
        listen       80;
        server_name  localhost;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        location / {
            root   html;
            index  index.html index.htm;
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}
}
